name: build
on:
  workflow_dispatch:
    inputs:
      cmake_params:
        description: 'cmake params'
        default: 'BETTERCAMERA=1 NODRAWINGDISTANCE=1 TEXTURE_FIX=1 EXT_OPTIONS_MENU=1 EXTERNAL_DATA=1'
        required: false
        type: string

jobs:
  msys2:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: nightly
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: unzip make git python mingw-w64-${{matrix.env}}-gcc mingw-w64-${{matrix.env}}-glew mingw-w64-${{matrix.env}}-SDL2 mingw-w64-${{matrix.env}}-SDL
      - name: Cache rom
        uses: actions/cache@v3
        id: rom-cache
        with:
          path: ./baserom.us.z64
          key: rom-cache-key
          restore-keys: rom-cache-key
      - name: Download rom
        if: steps.rom-cache.outputs.cache-hit != 'true'
        run: wget -O baserom.us.z64 ${ secrets.ROM_US_URL}} -nv
      - name: Build with params ${{inputs.cmake_params}}
        run: make ${{inputs.cmake_params}} -j2
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{matrix.sys}}
          path: |
            ./build/*/*.exe
            ./build/*/res/*
